declare const PayUHostedCheckout: {
    readonly formData: {
        readonly required: readonly ["key", "txnid", "amount", "productinfo", "firstname", "email", "phone", "hash", "surl", "furl"];
        readonly type: "object";
        readonly properties: {
            readonly key: {
                readonly title: "key1";
                readonly const: "JPM7Fg";
                readonly type: "string";
                readonly description: "Merchant key provided by PayU during onboarding.";
            };
            readonly txnid: {
                readonly type: "string";
                readonly description: "The transaction ID is a reference number for a specific order that is generated by the merchant.";
                readonly examples: readonly ["ypl938459435"];
            };
            readonly amount: {
                readonly type: "integer";
                readonly description: "The payment amount for the transaction.";
                readonly contentEncoding: "int32";
            };
            readonly productinfo: {
                readonly type: "string";
                readonly description: "A brief description of the product.";
                readonly examples: readonly ["iPhone"];
            };
            readonly firstname: {
                readonly type: "string";
                readonly description: "The first name of the customer.";
            };
            readonly email: {
                readonly type: "string";
                readonly description: "The email address of the customer.";
            };
            readonly phone: {
                readonly type: "number";
                readonly description: "The phone number of the customer.";
                readonly contentEncoding: "double";
            };
            readonly hash: {
                readonly type: "string";
                readonly description: "It is the hash calculated by the merchant. The hash calculation logic is: sha512(key|txnid|amount|productinfo|firstname|email|udf1|udf2|udf3|udf4|udf5||||||SALT)";
            };
            readonly surl: {
                readonly title: "surl";
                readonly const: "https://test-payment-middleware.payu.in/simulatorResponse";
                readonly type: "string";
                readonly description: "The success URL, which is the page PayU will redirect to if the transaction is successful.";
            };
            readonly furl: {
                readonly title: "furl";
                readonly const: "https://test-payment-middleware.payu.in/simulatorResponse";
                readonly type: "string";
                readonly description: "The Failure URL, which is the page PayU will redirect to if the transaction is failed.";
            };
            readonly lastname: {
                readonly type: "string";
                readonly description: "The last name of the customer.";
            };
            readonly address1: {
                readonly type: "string";
                readonly description: "The first line of the billing address.";
            };
            readonly address2: {
                readonly type: "string";
                readonly description: "The secondline of the billing address.";
            };
            readonly city: {
                readonly type: "string";
                readonly description: "The city where your customer resides as part of the billing address.";
            };
            readonly state: {
                readonly type: "string";
                readonly description: "The state where your customer resides as part of the billing address,";
            };
            readonly country: {
                readonly type: "string";
                readonly description: "The country where your customer resides.";
            };
            readonly zipcode: {
                readonly type: "string";
                readonly description: "Billing address zip code is mandatory for the cardless EMI option.";
            };
            readonly enforce_paymethod: {
                readonly type: "string";
                readonly description: "This parameter allows you to customize the payment options for each transaction. You can enforce specific payment modes, cards scheme, and specific banks under Net Banking using this method.";
                readonly examples: readonly ["creditcard|debitcard"];
            };
            readonly drop_category: {
                readonly type: "string";
                readonly description: "This parameter can be used if you want to hide one or multiple payment options. For example, if you want to collect the payment using debit card and Net Banking, you can hide the credit card mode of payment.";
                readonly examples: readonly ["DC|VISA|MAST"];
            };
            readonly udf1: {
                readonly type: "string";
                readonly description: "User-defined fields (udf) are used to store any information corresponding to a particular transaction. You can use up to five udfs in the post designated as udf1, udf2, udf3, udf4, udf5.";
            };
            readonly udf2: {
                readonly type: "string";
                readonly description: "User-defined fields (udf) are used to store any information corresponding to a particular transaction. You can use up to five udfs in the post designated as udf1, udf2, udf3, udf4, udf5.";
                readonly examples: readonly ["DC|VISA|MAST"];
            };
            readonly udf3: {
                readonly type: "string";
                readonly description: "User-defined fields (udf) are used to store any information corresponding to a particular transaction. You can use up to five udfs in the post designated as udf1, udf2, udf3, udf4, udf5.";
            };
            readonly udf4: {
                readonly type: "string";
                readonly description: "User-defined fields (udf) are used to store any information corresponding to a particular transaction. You can use up to five udfs in the post designated as udf1, udf2, udf3, udf4, udf5.";
            };
            readonly udf5: {
                readonly type: "string";
                readonly description: "User-defined fields (udf) are used to store any information corresponding to a particular transaction. You can use up to five udfs in the post designated as udf1, udf2, udf3, udf4, udf5.";
            };
        };
        readonly contentMediaType: "application/x-www-form-urlencoded";
        readonly $schema: "https://json-schema.org/draft/2020-12/schema";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly "Content-Type": {
                    readonly title: "content-type";
                    readonly const: "application/x-www-form-urlencoded";
                    readonly type: "string";
                    readonly examples: readonly ["application/x-www-form-urlencoded"];
                    readonly $schema: "https://json-schema.org/draft/2020-12/schema";
                };
            };
            readonly required: readonly ["Content-Type"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly contentMediaType: "text/plain";
            readonly additionalProperties: true;
            readonly $schema: "https://json-schema.org/draft/2020-12/schema";
        };
    };
};
export { PayUHostedCheckout };
